The Docker run command creates running containers from images. This is where commands from the Dockerfile (as well as our own input at runtime) are run. Because of this, it must be some of the first syntaxes you learn.

The command works in the following way: docker run [OPTIONS] IMAGE_NAME [COMMAND] [ARGUMENTS...]  the options enclosed in brackets are not required for a container to run.

Docker containers can be run with various options - depending on how we will use the container. This task will explain some of the most common options that you may want to use.

First, Simply Running a Container

Let's recall the syntax required to run a Docker container: docker run [OPTIONS] IMAGE_NAME [COMMAND] [ARGUMENTS...] . In this example, I am going to configure the container to run:

An image named "helloworld"
"Interactively" by providing the -it switch in the [OPTIONS] command. This will allow us to interact with the container directly.
I am going to spawn a shell within the container by providing /bin/bash as the [COMMAND] part. This argument is where you will place what commands you want to run within the container (such as a file, application or shell!)
So, to achieve the above, my command will look like the following:

-->  docker run -it helloworld /bin/bash

To list running containers, we can use the docker ps command. This command will list containers that are currently running - like so:

--> docker ps 

This command will also show information about the container, including:

The container's ID
What command is the container running
When was the container created
How long has the container been running
What ports are mapped
The name of the container



Tip: To list all containers (even stopped), you can use \
--> docker ps -a


This argument tells Docker to bind a port on the host operating system to a port that is being exposed in the container. You would use this instruction if you are running an application or service (such as a web server) in the container and wish to access the application/service by navigating to the IP address.

--> docker run -p 80:80 webserver
